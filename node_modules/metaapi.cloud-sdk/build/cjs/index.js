"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    CopyFactory: function() {
        return _metaapicloudcopyfactorysdk.default;
    },
    EquityBalanceListener: function() {
        return _riskManagement.EquityBalanceListener;
    },
    EquityChartListener: function() {
        return _riskManagement.EquityChartListener;
    },
    HistoryStorage: function() {
        return _historyStorage.default;
    },
    MemoryHistoryStorage: function() {
        return _memoryHistoryStorage.default;
    },
    MetaStats: function() {
        return _metaapicloudmetastatssdk.default;
    },
    PeriodStatisticsListener: function() {
        return _riskManagement.PeriodStatisticsListener;
    },
    RiskManagement: function() {
        return _riskManagement.default;
    },
    StopoutListener: function() {
        return _metaapicloudcopyfactorysdk.StopoutListener;
    },
    SynchronizationListener: function() {
        return _synchronizationListener.default;
    },
    TrackerEventListener: function() {
        return _riskManagement.TrackerEventListener;
    },
    TransactionListener: function() {
        return _metaapicloudcopyfactorysdk.TransactionListener;
    },
    UserLogListener: function() {
        return _metaapicloudcopyfactorysdk.UserLogListener;
    },
    default: function() {
        return _default;
    }
});
const _metaApi = /*#__PURE__*/ _interop_require_default(require("./metaApi/metaApi"));
const _historyStorage = /*#__PURE__*/ _interop_require_default(require("./metaApi/historyStorage"));
const _memoryHistoryStorage = /*#__PURE__*/ _interop_require_default(require("./metaApi/memoryHistoryStorage"));
const _synchronizationListener = /*#__PURE__*/ _interop_require_default(require("./clients/metaApi/synchronizationListener"));
const _metaapicloudcopyfactorysdk = /*#__PURE__*/ _interop_require_wildcard(require("metaapi.cloud-copyfactory-sdk"));
const _metaapicloudmetastatssdk = /*#__PURE__*/ _interop_require_default(require("metaapi.cloud-metastats-sdk"));
const _riskManagement = /*#__PURE__*/ _interop_require_wildcard(require("./riskManagement"));
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const _default = _metaApi.default;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjxhbm9uPiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmltcG9ydCBNZXRhQXBpIGZyb20gJy4vbWV0YUFwaS9tZXRhQXBpJztcbmltcG9ydCBIaXN0b3J5U3RvcmFnZSBmcm9tICcuL21ldGFBcGkvaGlzdG9yeVN0b3JhZ2UnO1xuaW1wb3J0IE1lbW9yeUhpc3RvcnlTdG9yYWdlIGZyb20gJy4vbWV0YUFwaS9tZW1vcnlIaXN0b3J5U3RvcmFnZSc7XG5pbXBvcnQgU3luY2hyb25pemF0aW9uTGlzdGVuZXIgZnJvbSAnLi9jbGllbnRzL21ldGFBcGkvc3luY2hyb25pemF0aW9uTGlzdGVuZXInO1xuaW1wb3J0IENvcHlGYWN0b3J5LCB7IFxuICBTdG9wb3V0TGlzdGVuZXIsIFxuICBVc2VyTG9nTGlzdGVuZXIsIFxuICBUcmFuc2FjdGlvbkxpc3RlbmVyXG59IGZyb20gJ21ldGFhcGkuY2xvdWQtY29weWZhY3Rvcnktc2RrJztcblxuaW1wb3J0IE1ldGFTdGF0cyBmcm9tICdtZXRhYXBpLmNsb3VkLW1ldGFzdGF0cy1zZGsnO1xuXG5pbXBvcnQgUmlza01hbmFnZW1lbnQsIHtcbiAgVHJhY2tlckV2ZW50TGlzdGVuZXIsXG4gIFBlcmlvZFN0YXRpc3RpY3NMaXN0ZW5lcixcbiAgRXF1aXR5Q2hhcnRMaXN0ZW5lcixcbiAgRXF1aXR5QmFsYW5jZUxpc3RlbmVyXG59IGZyb20gJy4vcmlza01hbmFnZW1lbnQnO1xuXG5leHBvcnQgZGVmYXVsdCBNZXRhQXBpO1xuXG5leHBvcnQge1xuICBIaXN0b3J5U3RvcmFnZSxcbiAgU3luY2hyb25pemF0aW9uTGlzdGVuZXIsXG4gIE1lbW9yeUhpc3RvcnlTdG9yYWdlLFxuICBDb3B5RmFjdG9yeSxcbiAgU3RvcG91dExpc3RlbmVyLFxuICBVc2VyTG9nTGlzdGVuZXIsXG4gIFRyYW5zYWN0aW9uTGlzdGVuZXIsXG4gIE1ldGFTdGF0cyxcbiAgUmlza01hbmFnZW1lbnQsXG4gIFRyYWNrZXJFdmVudExpc3RlbmVyLFxuICBQZXJpb2RTdGF0aXN0aWNzTGlzdGVuZXIsXG4gIEVxdWl0eUNoYXJ0TGlzdGVuZXIsXG4gIEVxdWl0eUJhbGFuY2VMaXN0ZW5lclxufTtcbiJdLCJuYW1lcyI6WyJDb3B5RmFjdG9yeSIsIkVxdWl0eUJhbGFuY2VMaXN0ZW5lciIsIkVxdWl0eUNoYXJ0TGlzdGVuZXIiLCJIaXN0b3J5U3RvcmFnZSIsIk1lbW9yeUhpc3RvcnlTdG9yYWdlIiwiTWV0YVN0YXRzIiwiUGVyaW9kU3RhdGlzdGljc0xpc3RlbmVyIiwiUmlza01hbmFnZW1lbnQiLCJTdG9wb3V0TGlzdGVuZXIiLCJTeW5jaHJvbml6YXRpb25MaXN0ZW5lciIsIlRyYWNrZXJFdmVudExpc3RlbmVyIiwiVHJhbnNhY3Rpb25MaXN0ZW5lciIsIlVzZXJMb2dMaXN0ZW5lciIsIk1ldGFBcGkiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7OztJQTJCRUEsV0FBVztlQUFYQSxtQ0FBVzs7SUFTWEMscUJBQXFCO2VBQXJCQSxxQ0FBcUI7O0lBRHJCQyxtQkFBbUI7ZUFBbkJBLG1DQUFtQjs7SUFYbkJDLGNBQWM7ZUFBZEEsdUJBQWM7O0lBRWRDLG9CQUFvQjtlQUFwQkEsNkJBQW9COztJQUtwQkMsU0FBUztlQUFUQSxpQ0FBUzs7SUFHVEMsd0JBQXdCO2VBQXhCQSx3Q0FBd0I7O0lBRnhCQyxjQUFjO2VBQWRBLHVCQUFjOztJQUpkQyxlQUFlO2VBQWZBLDJDQUFlOztJQUhmQyx1QkFBdUI7ZUFBdkJBLGdDQUF1Qjs7SUFRdkJDLG9CQUFvQjtlQUFwQkEsb0NBQW9COztJQUhwQkMsbUJBQW1CO2VBQW5CQSwrQ0FBbUI7O0lBRG5CQyxlQUFlO2VBQWZBLDJDQUFlOztJQVJqQixPQUF1QjtlQUF2Qjs7O2dFQW5Cb0I7dUVBQ087NkVBQ007Z0ZBQ0c7b0ZBSzdCO2lGQUVlO3dFQU9mOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQUVQLFdBQWVDLGdCQUFPIn0=